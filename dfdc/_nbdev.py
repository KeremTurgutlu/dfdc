# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"read_metadata": "00_core.ipynb",
         "open_cv_video_reader": "01_video_core.ipynb",
         "decord_cpu_video_reader": "01_video_core.ipynb",
         "get_decord_video_batch_cpu": "01_video_core.ipynb",
         "video_url": "01_video_core.ipynb",
         "play_video": "01_video_core.ipynb",
         "bboxes_to_original_scale": "10_bbox_utils.ipynb",
         "resize_bbox_by_scale": "10_bbox_utils.ipynb",
         "landmarks_to_original_scale": "10_bbox_utils.ipynb",
         "device": "11_retinaface_detection.ipynb",
         "retinaface_stats": "11_retinaface_detection.ipynb",
         "check_keys": "11_retinaface_detection.ipynb",
         "remove_prefix": "11_retinaface_detection.ipynb",
         "load_model": "11_retinaface_detection.ipynb",
         "get_model": "11_retinaface_detection.ipynb",
         "cudnn.benchmark": "11_retinaface_detection.ipynb",
         "predict": "11_retinaface_detection.ipynb",
         "generate_face_detections": "12_generate_face_detections.ipynb",
         "save": "13_save_cropped_faces.ipynb",
         "Image.save": "13_save_cropped_faces.ipynb",
         "save_cropped_faces": "13_save_cropped_faces.ipynb",
         "sort_dict": "21_single_frame_model.ipynb",
         "flatten_df": "20_datasets.ipynb",
         "convert_cropped_files_todf": "21_single_frame_model.ipynb",
         "create_frame_label_df": "21_single_frame_model.ipynb",
         "SingleFrameDataset": "21_single_frame_model.ipynb",
         "SingleFrameSampler": "21_single_frame_model.ipynb",
         "SingleFrameValidationDataset": "21_single_frame_model.ipynb"}

modules = ["core/core.py",
           "core/video_core.py",
           "face_detection/bbox_utils.py",
           "face_detection/retinaface.py",
           "face_detection/generate_detections.py",
           "face_detection/save_cropped_faces.py",
           "modeling/dataset_utils.py",
           "modeling/single_frame_model.py"]

doc_url = "https://fastai.github.io/dfdc/"

git_url = "https://github.com/fastai/dfdc/tree/master/"

def custom_doc_links(name): return None
