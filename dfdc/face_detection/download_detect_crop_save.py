# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/14_download_detect_crop_save.ipynb (unless otherwise specified).

__all__ = ['download_detect_crop_save']

# Cell
from fastai.vision import *

from ..core.core import *
from ..core.download_unzip import *
from .generate_detections import *
from .save_cropped_faces import *

# Cell
def download_detect_crop_save(download_part_no):
    # Download and Unzip
    print(f"Downloading part {download_part_no}")
    video_path = download_unzip(download_part_no)
    part_no = video_path.name.split("_")[-1]

    # Detect Faces from Original Videos
    modelname = "mobilenet"
    data_path = Path("/home/ubuntu/data/dfdc/")
    video_path = Path(data_path/f"dfdc_train/dfdc_train_part_{part_no}/")
    metadf = read_metadata(get_files(video_path, extensions=['.json'], recurse=True)[0])
    video_files_txt = video_path/"original_video_files.txt"
    _ = get_original_video_list(video_path, metadf, video_files_txt)

    dest_fname = data_path/f"dfdc_face_detections/part_{part_no}_retina_detections.csv"
    freq = 10
    model_args = dict(confidence_threshold = 0.5, top_k = 5, nms_threshold = 0.5, keep_top_k = 5)
    df = generate_face_detections(video_files_txt, freq, "mobilenet")

    # Crop and Save Faces for All Videos
    metadf["source"] = metadf.apply(lambda o: o['original'] if type(o['original']) == str else o['fname'], axis=1)
    df = df.rename(columns={"fname":"source"})
    face_detections_df = metadf.merge(df, how='inner', on='source')

    # Keep only existing videos (video dir missing videos which is in metadata)
    video_files = get_files(video_path, extensions=['.mp4'], recurse=True)
    video_file_fnames = [o.name for o in video_files]
    face_detections_df = face_detections_df[face_detections_df.fname.isin(video_file_fnames)].reset_index(drop=True)

    # Do crop and save
    face_detections_csv = data_path/f'dfdc_face_detections/part_{part_no}_retina_detections.csv'
    face_detections_df.to_csv(face_detections_csv, index=False)
    save_cropped_faces(data_path, video_path, face_detections_csv)

    # Remove videos
    shutil.rmtree(video_path)